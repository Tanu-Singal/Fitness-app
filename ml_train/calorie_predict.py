# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11WzAMbYkLgKxRwvC9B7elxZ-2ZTSCxrq
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics

calorie=pd.read_csv("calories.csv")


df=pd.read_csv("exercise.csv")


calorie_data=pd.concat([df,calorie['Calories']],axis=1)


print(calorie_data.isnull().sum())

print(calorie_data.info())


cal_data=calorie_data.drop('Gender',axis=1)

correlation=cal_data.corr()

plt.figure(figsize=(10,10))
sns.heatmap(correlation,cbar=True,square=True,fmt='.1f',annot=True,annot_kws={'size':8},cmap='Blues')

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
calorie_data['Gender']=le.fit_transform(calorie_data['Gender'])


X=calorie_data.drop(columns=['User_ID','Calories','Height'],axis=1)
y=calorie_data['Calories']

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

model=XGBRegressor()
model.fit(X_train,y_train)

pred=model.predict(X_test)
print("Predictions:", pred[:5])

score = model.score(X_test, y_test)
print("R2 Score:", score)

mae=metrics.mean_absolute_error(y_test,pred)
print("Mean Absolute Error:", mae)

model.get_booster().save_model("calorie_predictor_model.json")
print("Model saved using save_model()")